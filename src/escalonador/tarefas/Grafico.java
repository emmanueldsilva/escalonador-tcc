/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package escalonador.tarefas;

import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Bill
 */
public class Grafico extends javax.swing.JFrame {

    /**
     * Creates new form Grafico
     */
    public Grafico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int lerNumIndividuos(String resultados){
        /**
         * Le o número de indivíduos usados pelo AG que resultou o arquivo de resultados dado.
         */
        int numindividuos;
        int i1,i2;

        i1 = resultados.indexOf(" ag.numindividuos=", 0);
        i2 = resultados.indexOf(", ",i1);

        numindividuos=Integer.parseInt(resultados.substring(i1 + " ag.numindividuos=".length(), i2));

        return numindividuos;
    }

    private int lerNomeInstancia(String resultados){
        /**
         * Le o nome da instância usada pelo AG que resultou o arquivo de resultados dado.
         */
        int nomeinstancia;
        int i1,i2;

        i1 = resultados.indexOf("#Resultados do AG para a instancia: ", 0);
        i2 = resultados.indexOf(", ",i1);

        nomeinstancia=Integer.parseInt(resultados.substring(i1 + "#Resultados do AG para a instancia: ".length(), i2));

        return nomeinstancia;
    }
    
    private int lerNumRuns(String resultados){
        /**
         * Le o número de runs excutado pelo AG que resultou o arquivo de resultados dado.
         */
        int numruns;
        int i1,i2;

        i1 = resultados.indexOf(" ag.numruns=", 0);
        i2 = resultados.indexOf(", ",i1);

        numruns=Integer.parseInt(resultados.substring(i1 + " ag.numruns=".length(), i2));

        return numruns;
    }
    
    private int lerNumIteracoes(String resultados){
        /**
         * Le o número de iterações do AG que resultou no arquivo de resultados dado.
         */
        int numiteracoes;
        int i1,i2;

        i1 = resultados.indexOf(" ag.numiteracoes=", 0);
        i2 = resultados.indexOf(", ",i1);
        
        numiteracoes=Integer.parseInt(resultados.substring(i1 + " ag.numiteracoes=".length(), i2));

        return numiteracoes;
    }
    
    private double[] lerMediasMelhorAptidao(String resultados){
        /* Le um String que contem as inforamçõs de um arquivo de resultado do AG
         * calcula a média das melhores aptidões de cada geração e retorna um array
         * de doubles contendo essas médias.
         */
        System.out.print("lerMediasMelhorAptidao\n");
        int numruns = lerNumRuns(resultados);
        int numiteracoes = lerNumIteracoes(resultados);
        double[] mediasmelhoraptidao = new double[numiteracoes];
        double medapt;
        int i,j,i1,i2;
        
        i=0;
        while(i<numiteracoes){
            System.out.printf("\ti: %d\n",i);
            medapt = 0;
            j=0;
            while(j<numruns){
                
                i1 = resultados.indexOf(" run."+j+".geracao."+i+".melhoraptidao=",0);
                i2 = resultados.indexOf(", ",i1);
                
                if(i2<0){
                    i2 = resultados.indexOf("]",i1);
                }
                
                medapt += Double.parseDouble(resultados.substring(i1 + (" run."+j+".geracao."+i+".melhoraptidao=").length(), i2));
                
                j++;
            }
            
            mediasmelhoraptidao[i] = medapt/numruns;
            
            i++;
        }
        
        return mediasmelhoraptidao;
    }
    
    private CategoryDataset createDataset(String[] arrayresultados) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int i,j;
        double[] mediasmelhorapt;
        String numindividuos;
        
        System.out.print("createDataset\n");
        
        i=0;
        while(i<arrayresultados.length){
            
            mediasmelhorapt = lerMediasMelhorAptidao(arrayresultados[i]);
            numindividuos = Integer.toString(lerNumIndividuos(arrayresultados[i]));
            
            j=0;
            while(j<mediasmelhorapt.length){
                
                dataset.addValue(mediasmelhorapt[j],numindividuos,Integer.toString(j));
                
                j++;
            }
            
            i++;
        }
        
        return dataset; 
    }

    public void criaGrafico(String[] arrayresultados) {
        System.out.print("criaGrafico\n");
        CategoryDataset cds = createDataset(arrayresultados);
        final JFreeChart graf = ChartFactory.createLineChart(
            "Média das Melhores Aptidões",      // chart title
            "Gerações",                         // domain axis label
            "Aptidão",                          // range axis label
            cds,                                // data
            PlotOrientation.VERTICAL,           // orientation
            true,                               // include legend
            true,                               // tooltips
            false                               // urls
        );
        
        graf.setBackgroundPaint(Color.white);
        final CategoryPlot plot = (CategoryPlot) graf.getPlot();
        plot.setBackgroundPaint(Color.white);
        plot.setRangeGridlinePaint(Color.white);
        
        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(jPanel1.getWidth(),jPanel1.getHeight());
        myChartPanel.setVisible(true);
        jPanel1.removeAll();
        jPanel1.add(myChartPanel);
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafico().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
